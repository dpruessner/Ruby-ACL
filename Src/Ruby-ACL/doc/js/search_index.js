var search_data = {"index":{"searchIndex":["acl_object","ace","acerule","group","individual","principal","privilege","resourceobject","rubyacl","rubyaclexception","testrubyacl","add_membership()","add_membership()","add_membership_principal()","add_membership_privilege()","change_address()","change_of_res_ob_address()","change_of_res_ob_owner()","change_owner()","change_res_ob_type()","change_type()","check()","code()","create_ace()","create_group()","create_new()","create_new()","create_new()","create_new()","create_new()","create_principal()","create_privilege()","create_resource_object()","del_membership()","del_membership_principal()","del_membership_privilege()","delete()","delete()","delete()","delete_ace()","delete_principal()","delete_privilege()","delete_res_object()","delete_res_object_by_id()","eq()","find_parents()","find_res_ob()","find_res_ob_parents()","ge()","ge()","ge()","inspect()","load()","method()","ne()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","reload!()","rename()","rename()","rename()","rename()","rename_principal()","rename_privilege()","res_obs_grand2children()","save()","setup()","show_permissions_for()","test_set1_01_create_acl()","test_set1_02_save()","test_set1_03_load()","test_set1_04_setname()","test_set1_05_show_permissions_of()","test_set2_01_create_principal()","test_set2_02a_create_group()","test_set2_02b_create_group()","test_set2_02c_create_group()","test_set2_03_create_privilege()","test_set2_04_create_resource_object()","test_set2_05_create_ace()","test_set2_06_create_ace()","test_set3_00a_add_membership_principal()","test_set3_00b_add_membership_principal()","test_set3_01_add_membership_privilege()","test_set3_02_del_membership_principal()","test_set3_03_del_membership_privilege()","test_set3_04a_delete_principal()","test_set3_04b_delete_group()","test_set3_04c_delete_principal()","test_set3_05a_delete_privilege()","test_set3_05b_delete_privilege()","test_set3_06a_delete_res_object()","test_set3_06b_delete_res_object()","test_set3_07_del_ace()","test_set3_08_rename_principal()","test_set3_08a_check1()","test_set3_08b_check1()","test_set3_09_check()","test_set3_09_rename_privilege()","test_set3_10_check()","test_set3_11_check()","test_set3_12_change_res_ob_type()","test_set3_12_check()","test_set3_13_change_of_res_ob_address()","test_set3_13_check()","test_set3_14_change_of_res_ob_owner()","test_set3_14_check()","test_set3_15_check()","test_set3_16_check()","test_set3_17_check()","to_s()","tostring()","license","readme","rakefile","rake-d"],"longSearchIndex":["acl_object","ace","acerule","group","individual","principal","privilege","resourceobject","rubyacl","rubyaclexception","testrubyacl","acl_object#add_membership()","principal#add_membership()","rubyacl#add_membership_principal()","rubyacl#add_membership_privilege()","resourceobject#change_address()","rubyacl#change_of_res_ob_address()","rubyacl#change_of_res_ob_owner()","resourceobject#change_owner()","rubyacl#change_res_ob_type()","resourceobject#change_type()","rubyacl#check()","rubyaclexception#code()","rubyacl#create_ace()","rubyacl#create_group()","acl_object#create_new()","ace#create_new()","group#create_new()","individual#create_new()","resourceobject#create_new()","rubyacl#create_principal()","rubyacl#create_privilege()","rubyacl#create_resource_object()","acl_object#del_membership()","rubyacl#del_membership_principal()","rubyacl#del_membership_privilege()","acl_object#delete()","group#delete()","principal#delete()","rubyacl#delete_ace()","rubyacl#delete_principal()","rubyacl#delete_privilege()","rubyacl#delete_res_object()","rubyacl#delete_res_object_by_id()","principal#eq()","acl_object#find_parents()","resourceobject#find_res_ob()","resourceobject#find_res_ob_parents()","acl_object#ge()","privilege#ge()","resourceobject#ge()","rubyaclexception#inspect()","rubyacl::load()","rubyaclexception#method()","principal#ne()","acl_object::new()","ace::new()","acerule::new()","group::new()","individual::new()","principal::new()","privilege::new()","resourceobject::new()","rubyacl::new()","rubyaclexception::new()","acerule#reload!()","acl_object#rename()","ace#rename()","resourceobject#rename()","rubyacl#rename()","rubyacl#rename_principal()","rubyacl#rename_privilege()","resourceobject#res_obs_grand2children()","rubyacl#save()","testrubyacl#setup()","rubyacl#show_permissions_for()","testrubyacl#test_set1_01_create_acl()","testrubyacl#test_set1_02_save()","testrubyacl#test_set1_03_load()","testrubyacl#test_set1_04_setname()","testrubyacl#test_set1_05_show_permissions_of()","testrubyacl#test_set2_01_create_principal()","testrubyacl#test_set2_02a_create_group()","testrubyacl#test_set2_02b_create_group()","testrubyacl#test_set2_02c_create_group()","testrubyacl#test_set2_03_create_privilege()","testrubyacl#test_set2_04_create_resource_object()","testrubyacl#test_set2_05_create_ace()","testrubyacl#test_set2_06_create_ace()","testrubyacl#test_set3_00a_add_membership_principal()","testrubyacl#test_set3_00b_add_membership_principal()","testrubyacl#test_set3_01_add_membership_privilege()","testrubyacl#test_set3_02_del_membership_principal()","testrubyacl#test_set3_03_del_membership_privilege()","testrubyacl#test_set3_04a_delete_principal()","testrubyacl#test_set3_04b_delete_group()","testrubyacl#test_set3_04c_delete_principal()","testrubyacl#test_set3_05a_delete_privilege()","testrubyacl#test_set3_05b_delete_privilege()","testrubyacl#test_set3_06a_delete_res_object()","testrubyacl#test_set3_06b_delete_res_object()","testrubyacl#test_set3_07_del_ace()","testrubyacl#test_set3_08_rename_principal()","testrubyacl#test_set3_08a_check1()","testrubyacl#test_set3_08b_check1()","testrubyacl#test_set3_09_check()","testrubyacl#test_set3_09_rename_privilege()","testrubyacl#test_set3_10_check()","testrubyacl#test_set3_11_check()","testrubyacl#test_set3_12_change_res_ob_type()","testrubyacl#test_set3_12_check()","testrubyacl#test_set3_13_change_of_res_ob_address()","testrubyacl#test_set3_13_check()","testrubyacl#test_set3_14_change_of_res_ob_owner()","testrubyacl#test_set3_14_check()","testrubyacl#test_set3_15_check()","testrubyacl#test_set3_16_check()","testrubyacl#test_set3_17_check()","rubyaclexception#to_s()","rubyaclexception#tostring()","","","",""],"info":[["ACL_Object","","ACL_Object.html","",""],["Ace","","Ace.html","",""],["AceRule","","AceRule.html","",""],["Group","","Group.html","",""],["Individual","","Individual.html","",""],["Principal","","Principal.html","",""],["Privilege","","Privilege.html","",""],["ResourceObject","","ResourceObject.html","",""],["RubyACL","","RubyACL.html","","<p>RubyACL is library that handles access permisions. RubyACL offers to create\nand modify three ACL objects ...\n"],["RubyACLException","","RubyACLException.html","","<p>To change this template, choose Tools | Templates and open the template in\nthe editor.\n"],["TestRubyACL","","TestRubyACL.html","",""],["add_membership","ACL_Object","ACL_Object.html#method-i-add_membership","(name, groups, ob_exists = false)","<p>adds acl object into group(s); if you know prin exists set true for\nprin_exists\n"],["add_membership","Principal","Principal.html#method-i-add_membership","(name, groups, ob_exists = false)",""],["add_membership_principal","RubyACL","RubyACL.html#method-i-add_membership_principal","(name, groups, existance = false)","<p>It adds principal into group(s) as member.\n\n<pre>* *Args*    :\n  - +name+ -&gt; name of the principal\n  - +groups+ ...</pre>\n"],["add_membership_privilege","RubyACL","RubyACL.html#method-i-add_membership_privilege","(name, groups, existance = false)","<p>It adds privilege into privilege(s). So you can gather privileges into\ntree.\n\n<pre>* *Args*    :\n  - +name+ ...</pre>\n"],["change_address","ResourceObject","ResourceObject.html#method-i-change_address","(type, address, new_address)",""],["change_of_res_ob_address","RubyACL","RubyACL.html#method-i-change_of_res_ob_address","(type, address, new_address)","<p>It changes resource object's address.  Address and type must be specified\nto identify resource object. ...\n"],["change_of_res_ob_owner","RubyACL","RubyACL.html#method-i-change_of_res_ob_owner","(type, address, new_owner)","<p>It changes resource object's owner.  Address and type must be specified to\nidentify resource object. ...\n"],["change_owner","ResourceObject","ResourceObject.html#method-i-change_owner","(type, address, new_owner)",""],["change_res_ob_type","RubyACL","RubyACL.html#method-i-change_res_ob_type","(type, address, new_type)","<p>It changes resource object's type.  Address and type must be specified to\nidentify resource object.\n\n<pre>* ...</pre>\n"],["change_type","ResourceObject","ResourceObject.html#method-i-change_type","(type, address, new_type)",""],["check","RubyACL","RubyACL.html#method-i-check","(prin_name, priv_name, res_ob_type, res_ob_adr)","<p>Decides whether principal has privilege or not to resource object\nidentified  by access type and address. ...\n"],["code","RubyACLException","RubyACLException.html#method-i-code","()",""],["create_ace","RubyACL","RubyACL.html#method-i-create_ace","(prin_name, acc_type, priv_name, res_ob_type, res_ob_adr, grand2children = false)","<p>Creates ace in acl. If resource object doesn't exist it creates resource\nobject first.\n<p>Address: If is ...\n"],["create_group","RubyACL","RubyACL.html#method-i-create_group","(name, member_of = [\"ALL\"], members = [])","<p>Create group with name and membership in groups and members as groups or\nindividual\n<p>Note:\n\n<pre>members can be ...</pre>\n"],["create_new","ACL_Object","ACL_Object.html#method-i-create_new","(name, groups)",""],["create_new","Ace","Ace.html#method-i-create_new","(prin_id, acc_type, priv_id, res_ob_id)",""],["create_new","Group","Group.html#method-i-create_new","(name, groups, members)",""],["create_new","Individual","Individual.html#method-i-create_new","(name, groups)",""],["create_new","ResourceObject","ResourceObject.html#method-i-create_new","(type, address, owner)",""],["create_principal","RubyACL","RubyACL.html#method-i-create_principal","(name, groups = [\"ALL\"])","<p>It creates principal with name and membership in groups.\n\n<pre>* *Args*    :\n  - +name+ -&gt; name of the princpal ...</pre>\n"],["create_privilege","RubyACL","RubyACL.html#method-i-create_privilege","(name, member_of = [\"ALL_PRIVILEGES\"])","<p>It creates privilege with name and membership in specified privileges.\n\n<pre>* *Args*    :\n  - +name+ -&gt; name ...</pre>\n"],["create_resource_object","RubyACL","RubyACL.html#method-i-create_resource_object","(type, address, owner)","<p>It creates resource object with type, address and owner.\n\n<pre>* *Args*    :\n  - +type+ -&gt; type of resource ...</pre>\n"],["del_membership","ACL_Object","ACL_Object.html#method-i-del_membership","(name, groups)",""],["del_membership_principal","RubyACL","RubyACL.html#method-i-del_membership_principal","(prin_name, groups)","<p>It removes principal from group(s) where principal is member.\n\n<pre>* *Args*    :\n  - +name+ -&gt; name of the ...</pre>\n"],["del_membership_privilege","RubyACL","RubyACL.html#method-i-del_membership_privilege","(priv_name, groups)","<p>It removes the privilege from parental privilege(s) where the privilege is\nmember.\n\n<pre>* *Args*    :\n  - +name+ ...</pre>\n"],["delete","ACL_Object","ACL_Object.html#method-i-delete","(name)",""],["delete","Group","Group.html#method-i-delete","(name)",""],["delete","Principal","Principal.html#method-i-delete","(name)",""],["delete_ace","RubyACL","RubyACL.html#method-i-delete_ace","(ace_id)","<p>It deletes ACE from ACL.\n\n<pre>* *Args*    :\n  - +ace_id+ -&gt; id of the ACE\n* *Returns* :\n  -string, name of ...</pre>\n"],["delete_principal","RubyACL","RubyACL.html#method-i-delete_principal","(name)","<p>It deletes principal from ACL. It also deletes all linked ACEs.\n\n<pre>* *Args*    :\n  - +name+ -&gt; name of the ...</pre>\n"],["delete_privilege","RubyACL","RubyACL.html#method-i-delete_privilege","(name)","<p>It deletes privilege from ACL. It also deletes all linked ACEs.\n\n<pre>* *Args*    :\n  - +name+ -&gt; name of the ...</pre>\n"],["delete_res_object","RubyACL","RubyACL.html#method-i-delete_res_object","(type, address)","<p>It deletes resource object from ACL. It also deletes all linked ACEs.\n\n<pre>* *Args*    :\n  - +type+ -&gt; type ...</pre>\n"],["delete_res_object_by_id","RubyACL","RubyACL.html#method-i-delete_res_object_by_id","(id)","<p>It deletes resource object from ACL by id. It also deletes all linked ACEs.\n\n<pre>* *Args*    :\n  - +id+ -&gt; ...</pre>\n"],["eq","Principal","Principal.html#method-i-eq","(temp_ace, final_ace)",""],["find_parents","ACL_Object","ACL_Object.html#method-i-find_parents","(id)","<p>finds membership parrent and returns in sorted array by level,  Root is\nfirst leaf is last. e.g. dog's ...\n"],["find_res_ob","ResourceObject","ResourceObject.html#method-i-find_res_ob","(type, address)",""],["find_res_ob_parents","ResourceObject","ResourceObject.html#method-i-find_res_ob_parents","(res_ob_type, res_ob_adr)","<p>finds membership parrent, e.g. dog's parrent is mammal\n"],["ge","ACL_Object","ACL_Object.html#method-i-ge","(t, f)",""],["ge","Privilege","Privilege.html#method-i-ge","(temp_ace, final_ace, grid)",""],["ge","ResourceObject","ResourceObject.html#method-i-ge","(temp_ace, final_ace, grid)",""],["inspect","RubyACLException","RubyACLException.html#method-i-inspect","()",""],["load","RubyACL","RubyACL.html#method-c-load","(connector, colpath = \"/db/acl/\", src_files_path, report)","<p>It loads backuped acl data.\n\n<pre>* *Args*    :\n  - +connector+ -&gt;  instance of connection manager with db. ...</pre>\n"],["method","RubyACLException","RubyACLException.html#method-i-method","()",""],["ne","Principal","Principal.html#method-i-ne","(temp_ace, final_ace)",""],["new","ACL_Object","ACL_Object.html#method-c-new","(connector, col_path, report = false)",""],["new","Ace","Ace.html#method-c-new","(connector, col_path, report = false)",""],["new","AceRule","AceRule.html#method-c-new","(ace_id, ace, connector)",""],["new","Group","Group.html#method-c-new","(connector, col_path, report = false)",""],["new","Individual","Individual.html#method-c-new","(connector, col_path, report = false)",""],["new","Principal","Principal.html#method-c-new","(connector, col_path, report = false)",""],["new","Privilege","Privilege.html#method-c-new","(connector, col_path, report = false)",""],["new","ResourceObject","ResourceObject.html#method-c-new","(connector, col_path, report = false)",""],["new","RubyACL","RubyACL.html#method-c-new","(name, connector, colpath = \"/db/acl/\", src_files_path = \"./src_files/\", report = false)","<p>Creates new instance of Ruby-ACL. Ruby-ACL works if principals, privileges\nand resource object. With ...\n"],["new","RubyACLException","RubyACLException.html#method-c-new","(called_class, called_method, _description = \"Epic fail \\n\", _number = nil)",""],["reload!","AceRule","AceRule.html#method-i-reload-21","(ace_id)",""],["rename","ACL_Object","ACL_Object.html#method-i-rename","(old_name, new_name)",""],["rename","Ace","Ace.html#method-i-rename","()",""],["rename","ResourceObject","ResourceObject.html#method-i-rename","()",""],["rename","RubyACL","RubyACL.html#method-i-rename","(new_name)","<p>Renames acl (also in db)\n\n<pre>* *Args*    :\n  - +new_name+ -&gt; new name of acl\n* *Returns* :\n  -int, handle ...</pre>\n"],["rename_principal","RubyACL","RubyACL.html#method-i-rename_principal","(old_name, new_name)","<p>It renames any principal. It means either individual or group.\n\n<pre>* *Args*    :\n  - +old_name+ -&gt; old name ...</pre>\n"],["rename_privilege","RubyACL","RubyACL.html#method-i-rename_privilege","(old_name, new_name)","<p>It renames privilege.\n\n<pre>* *Args*    :\n  - +old_name+ -&gt; old name of privilege\n  - +new_name+ -&gt;  new name ...</pre>\n"],["res_obs_grand2children","ResourceObject","ResourceObject.html#method-i-res_obs_grand2children","(res_ob_ids)","<p>finds resOb, which ends with /*\n"],["save","RubyACL","RubyACL.html#method-i-save","(path, date = false)","<p>It saves/backs up acl\n\n<pre>* *Args*    :\n  - +path+ -&gt; to local location\n* *Returns* :\n  - array of documents ...</pre>\n"],["setup","TestRubyACL","TestRubyACL.html#method-i-setup","()",""],["show_permissions_for","RubyACL","RubyACL.html#method-i-show_permissions_for","(prin_name)","<p>It shows permissions for principal all its parents.\n\n<pre>* *Args*    :\n  - +prin_name+ -&gt; name of the principal ...</pre>\n"],["test_set1_01_create_acl","TestRubyACL","TestRubyACL.html#method-i-test_set1_01_create_acl","()",""],["test_set1_02_save","TestRubyACL","TestRubyACL.html#method-i-test_set1_02_save","()",""],["test_set1_03_load","TestRubyACL","TestRubyACL.html#method-i-test_set1_03_load","()",""],["test_set1_04_setname","TestRubyACL","TestRubyACL.html#method-i-test_set1_04_setname","(new_name = \"other_name\")",""],["test_set1_05_show_permissions_of","TestRubyACL","TestRubyACL.html#method-i-test_set1_05_show_permissions_of","()",""],["test_set2_01_create_principal","TestRubyACL","TestRubyACL.html#method-i-test_set2_01_create_principal","(name = 'labut')",""],["test_set2_02a_create_group","TestRubyACL","TestRubyACL.html#method-i-test_set2_02a_create_group","(name = 'ptaciHejno')",""],["test_set2_02b_create_group","TestRubyACL","TestRubyACL.html#method-i-test_set2_02b_create_group","()","<p>if user is member of group\n"],["test_set2_02c_create_group","TestRubyACL","TestRubyACL.html#method-i-test_set2_02c_create_group","()",""],["test_set2_03_create_privilege","TestRubyACL","TestRubyACL.html#method-i-test_set2_03_create_privilege","(name = \"LITAT\")",""],["test_set2_04_create_resource_object","TestRubyACL","TestRubyACL.html#method-i-test_set2_04_create_resource_object","(type = 'Rybnik', address = '/Rozmberk', owner = 'sirljan')",""],["test_set2_05_create_ace","TestRubyACL","TestRubyACL.html#method-i-test_set2_05_create_ace","(prin_name = 'sirljan', acc_type = 'allow', priv_name = 'SELECT', res_ob_type = 'doc', res_ob_adrs='/db/cities/cities.xml')",""],["test_set2_06_create_ace","TestRubyACL","TestRubyACL.html#method-i-test_set2_06_create_ace","()","<p>if different acctype will raise exception\n"],["test_set3_00a_add_membership_principal","TestRubyACL","TestRubyACL.html#method-i-test_set3_00a_add_membership_principal","()",""],["test_set3_00b_add_membership_principal","TestRubyACL","TestRubyACL.html#method-i-test_set3_00b_add_membership_principal","()",""],["test_set3_01_add_membership_privilege","TestRubyACL","TestRubyACL.html#method-i-test_set3_01_add_membership_privilege","()",""],["test_set3_02_del_membership_principal","TestRubyACL","TestRubyACL.html#method-i-test_set3_02_del_membership_principal","()",""],["test_set3_03_del_membership_privilege","TestRubyACL","TestRubyACL.html#method-i-test_set3_03_del_membership_privilege","()",""],["test_set3_04a_delete_principal","TestRubyACL","TestRubyACL.html#method-i-test_set3_04a_delete_principal","(name = 'blabol')",""],["test_set3_04b_delete_group","TestRubyACL","TestRubyACL.html#method-i-test_set3_04b_delete_group","()","<p>checks if is deleted references of membership\n"],["test_set3_04c_delete_principal","TestRubyACL","TestRubyACL.html#method-i-test_set3_04c_delete_principal","()","<p>checks if ACE is deleted\n"],["test_set3_05a_delete_privilege","TestRubyACL","TestRubyACL.html#method-i-test_set3_05a_delete_privilege","(name = 'KECAT')",""],["test_set3_05b_delete_privilege","TestRubyACL","TestRubyACL.html#method-i-test_set3_05b_delete_privilege","()",""],["test_set3_06a_delete_res_object","TestRubyACL","TestRubyACL.html#method-i-test_set3_06a_delete_res_object","(type = 'Les', address = 'cernocerny')",""],["test_set3_06b_delete_res_object","TestRubyACL","TestRubyACL.html#method-i-test_set3_06b_delete_res_object","()","<p>Checks if ACE mentioning resOb is deleted too\n"],["test_set3_07_del_ace","TestRubyACL","TestRubyACL.html#method-i-test_set3_07_del_ace","(prin_name = 'Klubicko', acc_type = 'allow', priv_name = 'ALL_PRIVILEGES', res_ob_type = 'Kosik', res_ob_adrs = 'Pleteny')",""],["test_set3_08_rename_principal","TestRubyACL","TestRubyACL.html#method-i-test_set3_08_rename_principal","()",""],["test_set3_08a_check1","TestRubyACL","TestRubyACL.html#method-i-test_set3_08a_check1","()",""],["test_set3_08b_check1","TestRubyACL","TestRubyACL.html#method-i-test_set3_08b_check1","()",""],["test_set3_09_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_09_check","()",""],["test_set3_09_rename_privilege","TestRubyACL","TestRubyACL.html#method-i-test_set3_09_rename_privilege","()",""],["test_set3_10_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_10_check","()",""],["test_set3_11_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_11_check","()",""],["test_set3_12_change_res_ob_type","TestRubyACL","TestRubyACL.html#method-i-test_set3_12_change_res_ob_type","()",""],["test_set3_12_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_12_check","()",""],["test_set3_13_change_of_res_ob_address","TestRubyACL","TestRubyACL.html#method-i-test_set3_13_change_of_res_ob_address","()",""],["test_set3_13_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_13_check","()","<p>Allow for ALL_PRIVILEGES, deny one.  Check if one is checked as deny and\nsome other checked as allow. ...\n"],["test_set3_14_change_of_res_ob_owner","TestRubyACL","TestRubyACL.html#method-i-test_set3_14_change_of_res_ob_owner","()",""],["test_set3_14_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_14_check","()","<p>Allow for parent resource, deny for descendent. Checks if explicit deny\nstronger than inherited allow. ...\n"],["test_set3_15_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_15_check","()","<p>Allow for parent resource. Checks if descendent resource has NOT inherited\npermision.\n"],["test_set3_16_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_16_check","()","<p>deny and allow for same principal\n"],["test_set3_17_check","TestRubyACL","TestRubyACL.html#method-i-test_set3_17_check","()","<p>Allow for children resources. Checks if descendent resource has inherited\npermision.\n"],["to_s","RubyACLException","RubyACLException.html#method-i-to_s","()",""],["tostring","RubyACLException","RubyACLException.html#method-i-tostring","()",""],["LICENSE","","LICENSE.html","","<p>Ruby-ACL\n<p>Put appropriate LICENSE for your project here.\n"],["README","","README.html","","<p>RubyACL - Access control list in Ruby\n<p>rubygem  &mdash; rubygems.org/gems/Ruby-ACL\n<p>github  &mdash; github.com/sirljan/Ruby-ACL ...\n"],["Rakefile","","Rakefile.html","","<p>require 'rubygems' require 'rake' require 'rake/clean'\n<p>require 'rake/gempackagetask' #initially  #require ...\n"],["rake-d","","nbproject/private/rake-d_txt.html","","<p>clean= clobber= clobber_package= clobber_rdoc= doc= doc/rdoc=\ndoc/rdoc/index.html= gem= package= pkg= ...\n"]]}}